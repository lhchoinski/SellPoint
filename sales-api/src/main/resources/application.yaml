server:
  port: 8080

spring:
  application:
    name: sales

  cache:
    type: redis

  data:
    redis:
      host: ${API_SALES_REDIS_HOST}
      port: ${API_SALES_REDIS_PORT}
      password: ${API_SALES_REDIS_PASSWORD}
      database: ${API_SALES_REDIS_DB}

  datasource:
    url: jdbc:postgresql://${API_SALES_DATABASE_HOST}:${API_SALES_DATABASE_PORT}/${API_SALES_DATABASE_DB}?currentSchema=${API_SALES_DATABASE_SCHEMA}
    username: ${API_SALES_DATABASE_USERNAME}
    password: ${API_SALES_DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver

  liquibase:
    enabled: true
    drop-first: false
    change-log: classpath:db/changelog/db.changelog-master-sales.xml
    default-schema: public

  jpa:
    database: POSTGRESQL
    show-sql: true
    hibernate:
      ddl-auto: none

  rabbitmq:
    host: ${API_SALES_RABBITMQ_HOST}
    port: ${API_SALES_RABBITMQ_PORT}
    username: ${API_SALES_RABBITMQ_USERNAME}
    password: ${API_SALES_RABBITMQ_PASSWORD}
    exchanges:
      sales: sales-exchange
      inventory: inventory-exchange
    routing-keys:
      sale-completed: sale.completed
      sale-failed: sale.failed
      inventory:
        reserve: inventory.product.reserve
        product: inventory.product.request

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  endpoint:
    prometheus:
      access: unrestricted

